#include <crails/utils/semantics.hpp>
#include <crails/cli/conventions.hpp>

std::string @resource_name;
std::string traits_header    = Crails::naming_convention.filenames("traits");
std::string traits_classname = Crails::naming_convention.classnames("application_traits");
std::string classname        = Crails::naming_convention.classnames(resource_name + "_traits");
std::string model_name       = Crails::naming_convention.classnames(resource_name);
std::string @tag_query       = "";

// END LINKING
#pragma once
#include "<%= traits_header %>.hpp"
#include "<%= Crails::naming_convention.filenames(resource_name) %>.hpp"
<% if (tag_query.length()) do -%>
#include "<%= Crails::naming_convention.filenames(tag_query) %>.hpp"
<% end -%>

struct <%= classname %> : public <%= traits_classname %>
{
  typedef <%= model_name %> Model;
  typedef <%= model_name %> IndexModel;
<% if (tag_query.length()) do -%>
  typedef <%= Crails::naming_convention.classnames(tag_query) %> TagModel;
<% end -%>
};

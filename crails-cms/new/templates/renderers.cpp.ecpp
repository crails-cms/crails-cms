#include <crails/utils/semantics.hpp>

std::string @project_name;

// END LINKING

#include "renderers.hpp"
#include "lib/renderers/<%= Crails::underscore(project_name) %>_html_renderer.hpp"
#include "lib/renderers/<%= Crails::underscore(project_name) %>_json_renderer.hpp"
#include "lib/renderers/<%= Crails::underscore(project_name) %>_rss_renderer.hpp"
#include <crails/cms/lib/renderers/crails_cms_html_renderer.hpp>
#include <crails/cms/lib/renderers/crails_cms_json_renderer.hpp>
#include <crails/cms/lib/renderers/crails_cms_rss_renderer.hpp>
#include <crails/cms/views/layout.hpp>

using namespace Crails;

ApplicationRenderers::ApplicationRenderers()
{
  const auto& layouts = Crails::Cms::Layouts::singleton::require();
  auto html_renderer std::make_unique<CrailsCmsHtmlRenderer>();
  auto json_renderer std::make_unique<CrailsCmsJsonRenderer>();
  auto rss_renderer = std::make_unique<CrailsCmsRssRenderer>();

  default_format = "text/html";
  layouts.load_renderers(*html_renderer);
  html_renderer->merge(<%= Crails::camelize(project_name) %>HtmlRenderer());
  json_renderer->merge(<%= Crails::camelize(project_name) %>JsonRenderer());
  rss_renderer->merge(<%= Crails::camelize(project_name) %>RssRenderer());
  renderers.push_back(std::move(html_renderer));
  renderers.push_back(std::move(json_renderer));
  renderers.push_back(std::move(rss_renderer));
}

std::string @project_name;
std::string @html_renderer_classname;
std::string @json_renderer_classname;
std::string @rss_renderer_classname;
bool @with_javascript = true;
bool @with_json = true;
bool @with_rss = true;
// END LINKING

#!/bin/sh

##
## Renderers
##
crails templates build \
  -r html \
  -i app/views \
  -t Crails::HtmlTemplate \
  -z crails/html_template.hpp \
  -n <%= html_renderer_classname %> \
  -p \.html$ \
  -v

<% if (with_json) do -%>
crails templates build \
  -r json \
  -i app/views \
  -t Crails::JsonTemplate \
  -z crails/json_template.hpp \
  -n <%= json_renderer_classname %> \
  -p \.json$ \
  -v
<% end -%>

<% if (with_rss) do -%>
crails templates build \
  -r rss \
  -i app/views \
  -t Crails::RssTemplate \
  -z crails/rss_template.hpp \
  -n <%= rss_renderer_classname %> \
  -p \.rss$ \
  -v
<% end -%>

<% if (with_javascript) do -%>
##
## JavaScript
##
npm install
node_modules/.bin/webpack
xxd -i -n <%= project_name %>_plugin_application_js lib/application.js lib/application.js.cpp
xxd -i -n <%= project_name %>_plugin_admin_js lib/admin.js lib/admin.js.cpp
<% end -%>

##
## Database
##
odb \
  -I. -I../.. -I$CRAILS_CMS_INCLUDE_DIRS \
  --std c++17 \
  --default-pointer std::shared_ptr \
  -d pgsql \
  --table-prefix "<%= project_name %>_" \
  --generate-schema --schema-format sql \
  --generate-query \
  --output-dir lib \
  app/models/*.hpp

##
## Fix ODB include paths, and generate plugin-odb.hxx
##
plugin_odb_hxx="`pwd`/lib/plugin-odb.hxx"
cd app/models
if [ -f "$plugin_odb_hxx" ] ; then
  rm "$plugin_odb_hxx"
fi
echo "#pragma once" >> "$plugin_odb_hxx"
echo "#include \"lib/odb/application-odb.hxx\"" >> "$plugin_odb_hxx"
for filename in `find . -name "*.h*"` ; do
  filename=`echo "$filename" | cut -d/ -f2`
  part=`echo "${filename%.*}"`
  regex="s/$filename/app\\/models\\/$filename/g"
  target="`pwd`/../../lib/$part-odb.hxx"

  echo "#include \"$part-odb.hxx\"" >> "$plugin_odb_hxx"

  # Fix include path for the model class
  sed "$regex" "$target" > .tmp.txt
  mv .tmp.txt "$target"

  # Removes includes to odb files, unless these files were generated by the compiler
  odb_includes=`grep "odb.hxx" "$target" | cut -d' ' -f2 | tr -d '"'`
  for odb_include in $odb_includes ; do
    if [ ! -f "`pwd`/../../lib/$odb_include" ] ; then
      pattern=`echo "$odb_include" | sed -e 's/\//\\\\\//g'`
      sed "/$pattern/d" "$target" > .tmp.txt
      mv .tmp.txt "$target"
    fi
  done

  # Replace these broken includes with an include to application-odb.hxx
  sed '9 a#include "lib/odb/application-odb.hxx"' "$target" > .tmp.txt
  mv .tmp.txt "$target"
done
cd -

